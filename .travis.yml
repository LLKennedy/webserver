stages:
  - compile
  - test
  - name: deploy
    if: branch = master

jobs:
  include:
    - name: server
      stage: compile
      language: go
      go: 1.12.x
      script: go build -o server.o ./server 
    - name: ui
      stage: compile
      language: node_js
      node_js: 10
      cache:
        directories:
          - node_modules
      install:
        - cd ui; npm install
      script: npm run build
    - name: server lint
      stage: test
      language: go
      go: 1.12.x
      before_script:
        - export GO111MODULE=off
        - go get golang.org/x/lint/golint
        - export GO111MODULE=auto
      script: 
        - golint --set_exit_status ./...
        - if [[ $(gofmt -s -l .) ]]; then gofmt -s -l .; exit 1; else exit 0; fi 
        - if [[ $(goimports -l .) ]]; then goimports -l .; exit 1; else exit 0; fi 
    - name: server test
      stage: test
      language: go
      go: 1.12.x
      script: 
        - go test ./server/internal/... -race
    - name: server coverage
      stage: test
      language: go
      go: 1.12.x
      script: 
        - go test ./server/internal/... -coverprofile=c.out
        - go tool cover -func=c.out
    - name: ui
      stage: test
      language: node_js
      node_js: 10
      cache:
        directories:
          - node_modules
      install:
        - cd ui; npm install
      script: npm run test
    - name: server
      stage: deploy
      language: go
      go: 1.12.x
      script: exit 0 # write deployment code
    - name: ui
      stage: deploy
      language: node_js
      node_js: 10
      cache:
        directories:
          - node_modules
      install:
        - cd ui; npm install
      script: exit 0 # write deployment code

